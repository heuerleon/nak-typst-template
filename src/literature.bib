@inproceedings{nocera_software_2023,
	location = {Bogot√°, Colombia},
	title = {Software Bill of Materials Adoption: A Mining Study from {GitHub}},
	rights = {https://doi.org/10.15223/policy-029},
	isbn = {9798350327830},
	url = {https://ieeexplore.ieee.org/document/10336262/},
	doi = {10.1109/ICSME58846.2023.00016},
	shorttitle = {Software Bill of Materials Adoption},
	eventtitle = {2023 {IEEE} International Conference on Software Maintenance and Evolution ({ICSME})},
	pages = {39--49},
	booktitle = {2023 {IEEE} International Conference on Software Maintenance and Evolution ({ICSME})},
	publisher = {{IEEE}},
	author = {Nocera, Sabato and Romano, Simone and Penta, Massimiliano Di and Francese, Rita and Scanniello, Giuseppe},
	urldate = {2024-08-06},
	date = {2023-10-01},
}

@book{moskala_android_2017,
	title = {Android Development with Kotlin},
	isbn = {978-1-78712-898-9},
	abstract = {Learn how to make Android development much faster using a variety of Kotlin features, from basics to advanced, to write better quality code.About This {BookLeverage} specific features of Kotlin to ease Android application {developmentWrite} code based on both object oriented and functional programming to build robust {applicationsFilled} with various practical examples so you can easily apply your knowledge to real world {scenariosIdentify} the improved way of dealing with common Java {patternsWho} This Book Is {ForThis} book is for developers who have a basic understanding of Java language and have 6-12 months of experience with Android development and developers who feel comfortable with {OOP} concepts.What You Will {LearnRun} a Kotlin application and understand the integration with Android {StudioIncorporate} Kotlin into new/existing Android Java based {projectLearn} about Kotlin type system to deal with null safety and {immutabilityDefine} various types of classes and deal with {propertiesDefine} collections and transform them in functional {wayDefine} extensions, new behaviours to existing libraries and Android framework {classesUse} generic type variance modifiers to define subtyping relationship between generic {typesBuild} a sample {applicationIn} {DetailNowadays}, improved application development does not just mean building better performing applications. It has become crucial to find improved ways of writing code. Kotlin is a language that helps developers build amazing Android applications easily and effectively. This book discusses Kotlin features in context of Android development. It demonstrates how common examples that are typical for Android development, can be simplified using Kotlin. It also shows all the benefits, improvements and new possibilities provided by this language.The book is divided in three modules that show the power of Kotlin and teach you how to use it properly. Each module present features in different levels of advancement. The first module covers Kotlin basics. This module will lay a firm foundation for the rest of the chapters so you are able to read and understand most of the Kotlin code. The next module dives deeper into the building blocks of Kotlin, such as functions, classes, and function types. You will learn how Kotlin brings many improvements to the table by improving common Java concepts and decreasing code verbosity. The last module presents features that are not present in Java. You will learn how certain tasks can be achieved in simpler ways thanks to Kotlin.Through the book, you will learn how to use Kotlin for Android development. You will get to know and understand most important Kotlin features, and how they can be used. You will be ready to start your own adventure with Android development with Kotlin.},
	pagetotal = {435},
	publisher = {Packt Publishing Ltd},
	author = {Moskala, Marcin and Wojda, Igor},
	date = {2017-08-30},
	langid = {english},
	note = {Google-Books-{ID}: {PJZGDwAAQBAJ}},
	keywords = {Computers / Languages / General, Computers / Languages / Java, Computers / Programming / Mobile Devices},
}